name: Test

on:
  # Run each time we push and pull requests
  push:
  pull_request:
  # Cron job
  # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows#scheduled-events-schedule
  schedule:
    # https://crontab.guru/#0_0_1_*_*
    - cron: "0 0 1 * *"

jobs:
  # As we are running on different environments, we are splitting the jobs
  # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobs
  local:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup prerequisites
        run: |
          sudo apt update
          sudo apt install mpich
          sudo apt install libmpich-dev
          sudo apt install libfftw3-dev
          sudo apt install libnetcdf-dev
          sudo apt install libnetcdf-cxx-legacy-dev
          sudo apt install g++

      - name: Setting up BOUT-dev next
        run: |
          git clone git://github.com/boutproject/BOUT-dev.git ${HOME}/BOUT-dev
          cd ${HOME}/BOUT-dev
          git checkout next
          ./configure
          make
          cd -

      - name: Install dependencies
        run: |
          pip install -e ".[test]"

      - name: Test local run
        run: |
          coverage run --source=. -p -m pytest tests/local/

      - name: Upload Artifact
        # https://docs.github.com/en/free-pro-team@latest/actions/guides/storing-workflow-data-as-artifacts
        uses: actions/upload-artifact@v2
        # Notice that we add ${{ matrix.python-version }} in order not to corrupt files
        # https://github.com/actions/upload-artifact#uploading-to-the-same-artifact
        with:
          name: local-coverage-${{ matrix.python-version }}
          path: .coverage*

  pbs:
    runs-on: ubuntu-latest
    container:
      image: loeiten/pbspro-test:latest
      env:
        PBS_START_MOM: 1
      # We mount the checked out repo to opt/bout_runners as the checkout action for repos are mounted in a strange
      # place (/__w/bout_runners/bout_runners/)
      options:
        --hostname pbs --user root -v ${{ github.workspace }}:/opt/bout_runners/:rw

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Test PBS run
        # First we set permissions for all users in /opt/bout_runners, then we run the test through the entrypoint
        # Note that the sleep period in the start seems to be essential in order for the submissions not to be stuck
        # forever in the queue
        run: |
          chmod -R 777 /opt/bout_runners
          bash /entrypoint.sh "sleep 10 && cd /opt/bout_runners && coverage run --source=. -p -m pytest tests/pbs"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: pbs-coverage
          path: .coverage*

  upload-to-codecov:
    needs: [local, pbs]
    runs-on: ubuntu-latest

    steps:
      # We need the repo in order for codecov to count lines
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Download all artifacts
        # https://github.com/actions/download-artifact
        uses: actions/download-artifact@v2

      - name: Install coverage
        run: |
          pip install coverage

      - name: Combine
        run: |
          cp -rf local-coverage*/.coverage.* .
          cp -rf pbs-coverage/.coverage* .
          coverage combine
          coverage xml

      - name: Upload coverage to Codecov
        # Use the v1 tag of: https://github.com/codecov/codecov-action
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
